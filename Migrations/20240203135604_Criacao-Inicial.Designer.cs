// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using mvc_lives.Models.Data;

#nullable disable

namespace mvc_lives.Migrations
{
    [DbContext(typeof(Contexto))]
    [Migration("20240203135604_Criacao-Inicial")]
    partial class CriacaoInicial
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.26")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("mvc_lives.Models.Inscricao", b =>
                {
                    b.Property<int>("InscricaoID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("InscricaoID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("InscricaoID"), 1L, 1);

                    b.Property<DateTime?>("DataVencimento")
                        .HasColumnType("datetime2")
                        .HasColumnName("DataVencimento");

                    b.Property<int>("InscritoID")
                        .HasColumnType("int")
                        .HasColumnName("InscritoID");

                    b.Property<int>("LiveID")
                        .HasColumnType("int")
                        .HasColumnName("LiveID");

                    b.Property<int>("StatusPagamento")
                        .HasColumnType("int")
                        .HasColumnName("StatusPagamento");

                    b.Property<decimal>("ValorInscricao")
                        .HasColumnType("decimal(18,2)")
                        .HasColumnName("ValorInscricao");

                    b.HasKey("InscricaoID");

                    b.HasIndex("InscritoID");

                    b.HasIndex("LiveID");

                    b.ToTable("Inscricao");
                });

            modelBuilder.Entity("mvc_lives.Models.Inscrito", b =>
                {
                    b.Property<int>("InscritoID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("InscritoID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("InscritoID"), 1L, 1);

                    b.Property<DateTime>("DataNascimento")
                        .HasColumnType("datetime2")
                        .HasColumnName("DataNascimento");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Email");

                    b.Property<string>("Instagram")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("EnderecoInstagram");

                    b.Property<string>("Nome")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Nome");

                    b.HasKey("InscritoID");

                    b.ToTable("Inscrito");
                });

            modelBuilder.Entity("mvc_lives.Models.Instrutor", b =>
                {
                    b.Property<int>("InstrutorID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("InstrutorID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("InstrutorID"), 1L, 1);

                    b.Property<DateTime>("DataNascimento")
                        .HasColumnType("datetime2")
                        .HasColumnName("DataNascimento");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Email");

                    b.Property<string>("Instagram")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("EnderecoInstagram");

                    b.Property<string>("Nome")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Nome");

                    b.HasKey("InstrutorID");

                    b.ToTable("Instrutor");
                });

            modelBuilder.Entity("mvc_lives.Models.Live", b =>
                {
                    b.Property<int>("LiveID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("LiveID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("LiveID"), 1L, 1);

                    b.Property<string>("Descricao")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Descicao");

                    b.Property<int>("DuracaoMin")
                        .HasColumnType("int")
                        .HasColumnName("DuracaoMin");

                    b.Property<DateTime>("HoraInicio")
                        .HasColumnType("datetime2")
                        .HasColumnName("HoraInicio");

                    b.Property<int>("InstrutorID")
                        .HasColumnType("int")
                        .HasColumnName("InstrutorID");

                    b.Property<string>("Nome")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Nome");

                    b.Property<decimal>("ValorInscricao")
                        .HasColumnType("decimal(18,2)")
                        .HasColumnName("ValorInscricao");

                    b.HasKey("LiveID");

                    b.HasIndex("InstrutorID");

                    b.ToTable("Live");
                });

            modelBuilder.Entity("mvc_lives.Models.Inscricao", b =>
                {
                    b.HasOne("mvc_lives.Models.Inscrito", "Inscrito")
                        .WithMany("Inscricoes")
                        .HasForeignKey("InscritoID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("mvc_lives.Models.Live", "Live")
                        .WithMany("Inscricoes")
                        .HasForeignKey("LiveID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Inscrito");

                    b.Navigation("Live");
                });

            modelBuilder.Entity("mvc_lives.Models.Live", b =>
                {
                    b.HasOne("mvc_lives.Models.Instrutor", "Instrutor")
                        .WithMany("Lives")
                        .HasForeignKey("InstrutorID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Instrutor");
                });

            modelBuilder.Entity("mvc_lives.Models.Inscrito", b =>
                {
                    b.Navigation("Inscricoes");
                });

            modelBuilder.Entity("mvc_lives.Models.Instrutor", b =>
                {
                    b.Navigation("Lives");
                });

            modelBuilder.Entity("mvc_lives.Models.Live", b =>
                {
                    b.Navigation("Inscricoes");
                });
#pragma warning restore 612, 618
        }
    }
}
